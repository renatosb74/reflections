How did viewing a diff between two versions of a file help you see the bug that
was introduced?

It saves a lot more of time instead of looking after the differences line by line.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

It can allow you to check back previous versions of the code you wrote, and you 
are able to learn from your previous mistakes.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Pro: You always know where you stopped coding;
Con: It's easy to get lost of where you were coding, functions/methods could be
incomplete, etc

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Because they are more interconnected, one depends of the other.

How can you use the commands git log and git diff to view the history of files?

git log - to list all commits
git diff - to see the changes between commits

How might using version control make you more confident to make changes that
could break something?

Because you have all the control you would expect - you have all versions
documented and you cand compare the code between all of them

Now that you have your workspace set up, what do you want to try using Git for?

I would like to try using it for my projects.

